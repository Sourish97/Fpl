/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fpl;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Admin
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    Connection conn = null;
    static String current_user="";
    static int userteamid;
    PreparedStatement pst,pst1;
    Statement stmt = null;
    ResultSet rs,rs1;
    static boolean tget=false;
    Vector playerIn=new Vector<String>();
    Vector playerOut=new Vector<String>();
    DefaultTableModel transfermodel;
    String sql;
    public MainFrame() {
        try {

            initComponents();
            System.out.println("-------- Oracle JDBC Connection Testing ------");
            try {
                
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
            } catch (ClassNotFoundException e) {
                
                System.out.println("Where is your Oracle JDBC Driver?");
                e.printStackTrace();
                return;
                
            }
            System.out.println("Oracle JDBC Driver Registered!");
            try {
                
                conn = DriverManager.getConnection(
                        "jdbc:oracle:thin:@localhost:1521:orcl", "system", "123456");
                
            } catch (SQLException e) {
                
                System.out.println("Connection Failed! Check output console");
                e.printStackTrace();
                return;
                
            }
            if (conn != null) {
                System.out.println("Connected!");
            } else {
                System.out.println("Failed to make connection!");
            }
            pst=(PreparedStatement)conn.prepareStatement("Select * from reg_user where email_id=? "
                    + "union select * from reg_user@syslink2 where email_id=?");
            pst.setString(1, "sourishvaghulade@gmail.com");
            pst.setString(2, "sourishvaghulade@gmail.com");
            rs=pst.executeQuery();
            while(rs.next()){
                String email_id=rs.getString(1);
                System.out.println(email_id);
            }
            rs.close();
        } catch (SQLException ex) {

            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        email_id = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();
        MyTeam = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        Points = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pointsTable = new javax.swing.JTable();
        Transfers = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TransfersTable = new javax.swing.JTable();
        transferBtn = new javax.swing.JButton();
        Statistics = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        StatsTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fantasy Premier League");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        Login.setBackground(new java.awt.Color(153, 102, 0));

        jLabel5.setText("Email ID");

        jLabel6.setText("Password");

        loginBtn.setText("Login");
        loginBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
        Login.setLayout(LoginLayout);
        LoginLayout.setHorizontalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(email_id)
                    .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLayout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(loginBtn)
                .addGap(169, 169, 169))
        );
        LoginLayout.setVerticalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(email_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(loginBtn)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jPanel1.add(Login, "card1");

        MyTeam.setBackground(new java.awt.Color(51, 153, 0));

        teamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fname", "Lname", "position", "injury_status"
            }
        ));
        jScrollPane1.setViewportView(teamTable);

        jLabel2.setText("My Team");

        javax.swing.GroupLayout MyTeamLayout = new javax.swing.GroupLayout(MyTeam);
        MyTeam.setLayout(MyTeamLayout);
        MyTeamLayout.setHorizontalGroup(
            MyTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MyTeamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(MyTeamLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MyTeamLayout.setVerticalGroup(
            MyTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MyTeamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel1.add(MyTeam, "card2");

        Points.setBackground(new java.awt.Color(51, 153, 0));

        jLabel3.setText("Points");

        pointsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fname", "Lname", "Points"
            }
        ));
        jScrollPane2.setViewportView(pointsTable);

        javax.swing.GroupLayout PointsLayout = new javax.swing.GroupLayout(Points);
        Points.setLayout(PointsLayout);
        PointsLayout.setHorizontalGroup(
            PointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PointsLayout.createSequentialGroup()
                .addGroup(PointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PointsLayout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(jLabel3))
                    .addGroup(PointsLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        PointsLayout.setVerticalGroup(
            PointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PointsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel1.add(Points, "card3");

        Transfers.setBackground(new java.awt.Color(51, 153, 0));

        jLabel1.setText("Transfers");

        TransfersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fname", "Lname", "Total Points", "Transfer"
            }
        ));
        jScrollPane4.setViewportView(TransfersTable);

        transferBtn.setLabel("Transfer");
        transferBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transferBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout TransfersLayout = new javax.swing.GroupLayout(Transfers);
        Transfers.setLayout(TransfersLayout);
        TransfersLayout.setHorizontalGroup(
            TransfersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransfersLayout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TransfersLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(TransfersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(transferBtn)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        TransfersLayout.setVerticalGroup(
            TransfersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransfersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transferBtn)
                .addGap(12, 12, 12))
        );

        jPanel1.add(Transfers, "card4");

        Statistics.setBackground(new java.awt.Color(0, 153, 0));

        StatsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fname", "Lname", "Total Points", "PPM", "Price", "Percent-sel"
            }
        ));
        jScrollPane3.setViewportView(StatsTable);

        jLabel4.setText("Statistics");

        javax.swing.GroupLayout StatisticsLayout = new javax.swing.GroupLayout(Statistics);
        Statistics.setLayout(StatisticsLayout);
        StatisticsLayout.setHorizontalGroup(
            StatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(StatisticsLayout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        StatisticsLayout.setVerticalGroup(
            StatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel1.add(Statistics, "card5");

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(null);
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenu1.setBorder(null);
        jMenu1.setText("My Team");
        jMenu1.setEnabled(false);
        jMenu1.setMargin(new java.awt.Insets(0, 10, 0, 10));
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Points");
        jMenu2.setEnabled(false);
        jMenu2.setMargin(new java.awt.Insets(0, 10, 0, 0));
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Transfers");
        jMenu3.setEnabled(false);
        jMenu3.setMargin(new java.awt.Insets(0, 10, 0, 0));
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Statistics");
        jMenu4.setEnabled(false);
        jMenu4.setMargin(new java.awt.Insets(0, 10, 0, 0));
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        CardLayout cl=(CardLayout)jPanel1.getLayout();
        cl.show(jPanel1, "card2");
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        try {
            // TODO add your handling code here:
            CardLayout cl=(CardLayout)jPanel1.getLayout();
            cl.show(jPanel1, "card3");
            pst=(PreparedStatement)conn.prepareStatement("select fname,lname,gw_points from players where player_id in (" +
"select player_id from team_players where team_id=(" +
"select team_id from reg_user where email_id=?)) union " +
"select fname,lname,gw_points from players@syslink2 where player_id in " +
"(select player_id from team_players@syslink2 where team_id=" +
"(select team_id from reg_user@syslink2 where email_id=?))");
            pst.setString(1, current_user);
            pst.setString(2, current_user);
            rs=pst.executeQuery();
            DefaultTableModel model=(DefaultTableModel) pointsTable.getModel();
            for( int i = model.getRowCount() - 1; i >= 0; i-- ) {
                   model.removeRow(i);
    }
            Object[] rowData=new Object[3];
            while(rs.next()){
                rowData[0]=rs.getString(1);
                rowData[1]=rs.getString(2);
                rowData[2]=rs.getInt(3);
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
            // TODO add your handling code here:
            playerIn.removeAllElements();
            playerOut.removeAllElements();
            try {
            // TODO add your handling code here:
            CardLayout cl=(CardLayout)jPanel1.getLayout();
            cl.show(jPanel1, "card4");
            
            pst=(PreparedStatement)conn.prepareStatement("select lname from players where player_id not in (" +
"select player_id from team_players where team_id=(" +
"select team_id from reg_user where email_id=?)) union " +
"select lname from players@syslink2 where player_id not in (" +
"select player_id from team_players@syslink2 where team_id=(" +
"select team_id from reg_user@syslink2 where email_id=?))");
            pst.setString(1, current_user);
            pst.setString(2, current_user);
            rs=pst.executeQuery();
            Vector <String> vector = new Vector<String>();
            while(rs.next()){
                vector.add(rs.getString(1));
            }
            String[] players = vector.toArray(new String[vector.size()]);
            JComboBox combo=new JComboBox<String>(players);
            combo.addActionListener(new ActionListener(){
            
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(null, combo.getSelectedItem());
                System.out.println(TransfersTable.getSelectedRow()+" "+TransfersTable.getSelectedColumn());
                playerOut.add(transfermodel.getValueAt(TransfersTable.getSelectedRow(),1));
                playerIn.add(combo.getSelectedItem().toString());
                System.out.println(combo.getSelectedItem().toString());
                System.out.println(playerIn.get(0).toString());
                System.out.println(playerOut.get(0));
                
            }
        });
            
            
            
            pst=(PreparedStatement)conn.prepareStatement("select fname,lname,total_points from players where player_id in (" +
"select player_id from team_players where team_id=(" +
"select team_id from reg_user where email_id=?)) union " +
"select fname,lname,total_points from players@syslink2 where player_id in (" +
"select player_id from team_players@syslink2 where team_id=(" +
"select team_id from reg_user@syslink2 where email_id=?))");
            pst.setString(1, current_user);
            pst.setString(2, current_user);
            rs=pst.executeQuery();
            transfermodel=(DefaultTableModel) TransfersTable.getModel();
            for( int i = transfermodel.getRowCount() - 1; i >= 0; i-- ) {
                   transfermodel.removeRow(i);
    }
            Object[] rowData=new Object[4];
            while(rs.next()){
                rowData[0]=rs.getString(1);
                rowData[1]=rs.getString(2);
                rowData[2]=rs.getInt(3);
                rowData[3]="Choose..";
                transfermodel.addRow(rowData);
            }
                TableColumn col=TransfersTable.getColumnModel().getColumn(3);
                
//                model.getValueAt(TransfersTable.getSelectedRow(),0);
                col.setCellEditor(new DefaultCellEditor(combo));
                rs.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }//GEN-LAST:event_jMenu3MouseClicked

    private void loginBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginBtnMouseClicked
        try {
            // TODO add your handling code here:
            pst=(PreparedStatement)conn.prepareStatement("Select team_id from reg_user where"
                    + " email_id=? and password=? union Select team_id from reg_user@syslink2 where"
                    + " email_id=? and password=?");
            pst.setString(1, email_id.getText());
            pst.setString(2, password.getText());
            pst.setString(3, email_id.getText());
            pst.setString(4, password.getText());
            rs=pst.executeQuery();
            if(rs.next()){
               current_user=email_id.getText();
               userteamid=rs.getInt(1);
//               System.out.println(userteamid);
               CardLayout cl=(CardLayout)jPanel1.getLayout();
               cl.show(jPanel1, "card2");
               System.out.println("Login Successful");
               jMenu1.setEnabled(true);
               jMenu2.setEnabled(true);
               jMenu3.setEnabled(true);
               jMenu4.setEnabled(true);
               DefaultTableModel model=(DefaultTableModel) teamTable.getModel();
               for( int i = model.getRowCount() - 1; i >= 0; i-- ) {
                   model.removeRow(i);
    }
               Object rowData[]=new Object[4];
               pst=(PreparedStatement)conn.prepareStatement("select fname,lname,position,injury_status from players where player_id in (" +
"select player_id from team_players where team_id=(" +
"select team_id from reg_user where email_id=?)) union " +
"select fname,lname,position,injury_status from players@syslink2 where player_id in (" +
"select player_id from team_players@syslink2 where team_id=(" +
"select team_id from reg_user@syslink2 where email_id=?))");
            pst.setString(1, current_user);
            pst.setString(2, current_user);
            rs=pst.executeQuery();
            
            while(rs.next()){
                rowData[0]=rs.getString(1);
                rowData[1]=rs.getString(2);
                rowData[2]=rs.getString(3);
                rowData[3]=rs.getString(4);
                model.addRow(rowData);
            }
            }
            else{
                System.out.println("Login Failed");
                JOptionPane.showMessageDialog(jPanel1, "Login Failed");
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginBtnMouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            CardLayout cl=(CardLayout)jPanel1.getLayout();
            cl.show(jPanel1, "card5");
            pst=(PreparedStatement)conn.prepareStatement("select fname,lname,total_points,ppm,price,percent_sel from players union " +
"select fname,lname,total_points,ppm,price,percent_sel from players@syslink2");
            rs=pst.executeQuery();
            DefaultTableModel model=(DefaultTableModel) StatsTable.getModel();
            for( int i = model.getRowCount() - 1; i >= 0; i-- ) {
                   model.removeRow(i);
    }
            Object[] rowData=new Object[6];
            while(rs.next()){
                rowData[0]=rs.getString(1);
                rowData[1]=rs.getString(2);
                rowData[2]=rs.getInt(3);
                rowData[3]=rs.getDouble(4);
                rowData[4]=rs.getDouble(5);
                rowData[5]=rs.getDouble(6)+"%";
                model.addRow(rowData);
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenu4MouseClicked

    private void transferBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferBtnMouseClicked
        try {
            // TODO add your handling code here:
            int pid=0;
            for(int i=0;i<playerOut.size();i++){
            //Delete Player
            pst=(PreparedStatement)conn.prepareStatement("delete from team_players where team_id=? "
                    + "and player_id=(" +
"select player_id from players where lname=?)");
            pst.setInt(1, userteamid);
            pst.setString(2, playerOut.get(i).toString());
            pst1=(PreparedStatement)conn.prepareStatement("delete from team_players@syslink2 where team_id=? "
                    + "and player_id=(" +
"select player_id from players@syslink2 where lname=?)");
            pst1.setInt(1, userteamid);
            pst1.setString(2, playerOut.get(i).toString());
            rs=pst.executeQuery();
            rs1=pst1.executeQuery();
            
            //Current DB
            if(rs.next() || rs1.next())
            System.out.println("Player Deleted");
            //Get New PlayerID
            pst=(PreparedStatement)conn.prepareStatement("select player_id from players where lname=? union select player_id from players@syslink2 where lname=?");
            pst.setString(1, playerIn.get(i).toString());
            pst.setString(2, playerIn.get(i).toString());
            rs=pst.executeQuery();
            if(rs.next()){
                pid=rs.getInt(1);
            System.out.println("PlayerID retrieved");
            }
            //Insert New player
            if(pid<=10){
            pst=(PreparedStatement)conn.prepareStatement("INSERT INTO TEAM_PLAYERS" +
" VALUES(?,?)");
            pst.setInt(1, pid);
            pst.setInt(2, userteamid);
            System.out.println("PID="+pid+" userteamid"+userteamid);
            pst.executeQuery();
            System.out.println("Player Inserted");
            }
            //Syslink2            
            //Insert New player
            else if(pid>10){
            pst1=(PreparedStatement)conn.prepareStatement("INSERT INTO TEAM_PLAYERS@syslink2" +
" VALUES(?,?)");
            pst1.setInt(1, pid);
            pst1.setInt(2, userteamid);
            System.out.println("PID="+pid+" userteamid"+userteamid);
            pst1.executeQuery();
            System.out.println("Player Inserted SYSLINK2");
            }
            }
            rs.close();
            rs1.close();
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_transferBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Login;
    private javax.swing.JPanel MyTeam;
    private javax.swing.JPanel Points;
    private javax.swing.JPanel Statistics;
    private javax.swing.JTable StatsTable;
    private javax.swing.JPanel Transfers;
    private javax.swing.JTable TransfersTable;
    private javax.swing.JTextField email_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField password;
    private javax.swing.JTable pointsTable;
    private javax.swing.JTable teamTable;
    private javax.swing.JButton transferBtn;
    // End of variables declaration//GEN-END:variables
}
